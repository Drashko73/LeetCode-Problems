int isSameAs(struct TreeNode *root1, struct TreeNode *root2)
{
    int x = 0;
    int y = 0;
    
    if(root1 == NULL && root2 == NULL)
        return 0;
    else if(root1 == NULL || root2 == NULL)
        return -1;
    
    if(root1->val == root2->val)
    {
        x = isSameAs(root1->left,root2->left);
        if(x == -1)
            return -1;
        y = isSameAs(root1->right,root2->right);
        if(y == -1)
            return -1;
        return 0;
    }
    return -1;
}

void Test(struct TreeNode *root, struct TreeNode *subroot, int *flag)
{
    if(!root)
        return;
    
    if(isSameAs(root,subroot) == 0)
    {
        *flag = 1;
        return;
    }
    
    Test(root->left,subroot,flag);
    Test(root->right,subroot,flag);
}

bool isSubtree(struct TreeNode* root, struct TreeNode* subRoot){
    int flag = 0;
    Test(root,subRoot,&flag);
    
    return (flag)?true:false;
}
