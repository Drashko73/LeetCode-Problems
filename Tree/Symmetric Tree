int recurr(struct TreeNode *p, struct TreeNode *q)
{
    if(!p && !q) return 1;
    else if(!p && q) return 0;
    else if(p && !q) return 0;

    if(p->val != q->val) return 0;

    int l = recurr(p->left, q->right);
    if(!l) return 0;
    int r = recurr(p->right, q->left);
    
    return (r) ? 1 : 0;

}

bool isSymmetric(struct TreeNode* root)
{
    if(!root->left && !root->right) return 1;
    else if(!root->left && root->right) return 0;
    else if(root->left && !root->right) return 0;

    return recurr(root->left, root->right);
}
